"""
Django settings for crm project.

Generated by 'django-admin startproject' using Django 3.2.24.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from decouple import config
# import pymysql

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG',cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'djoser',
    "debug_toolbar",
    'base',
    "django.contrib.gis",
    "world",
    'geo',
    'leaflet',
    'job_order'
]
import os
if os.name == 'nt':
    import platform

    OSGEO4W = r"C:\OSGeo4W"
    assert os.path.isdir(OSGEO4W), "Directory does not exist: " + OSGEO4W
    os.environ['OSGEO4W_ROOT'] = OSGEO4W
    os.environ['PROJ_LIB'] = OSGEO4W + r"\share\proj"
    os.environ['PATH'] = OSGEO4W + r"\bin;" + os.environ['PATH']
    GDAL_DATA = r'C:\Program Files\GDAL\gdal-data'
    GDAL_LIBRARY_PATH = r'C:\OSGeo4W\bin\gdal304'

# LEAFLET_CONFIG  ={
#     'SPATIAL_EXTENT': (5.0, 44.0, 7.5, 46),
#     'DEFAULT_CENTER': (6.0, 45.0),
#     'DEFAULT_ZOOM': 16,
#     'MIN_ZOOM': 3,
#     'MAX_ZOOM': 18,
#     'DEFAULT_PRECISION': 6,
#     'TILES': [('Satellite', 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {'attribution': '&copy; Big eye', 'maxZoom': 16}),]
# }
DEFAULT_SRID = 3857
LEAFLET_CONFIG = {
    'SRID': DEFAULT_SRID,
    'DEFAULT_CENTER': (31.8970, 35.2112),
    'DEFAULT_ZOOM': 10,
    'MAX_ZOOM': 20,
    'MIN_ZOOM': 5,
    # 'SPATIAL_EXTENT': (31.0, 29.0, 38.0, 34.0),
    'TILES': [(('Default'), '//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', '© <a href="https://mada.ps">Mada</a>')],
    'OVERLAYS': [
        (('Satellite'), 'https://postcode.palestine.ps/TilesDir/{z}/{x}/{y}.png', '© <a href="https://mada.ps">Mada</a>'),
        (('Satellite 2'), 'https://services.digitalglobe.com/earthservice/tmsaccess/tms/1.0.0/DigitalGlobe:ImageryTileService@EPSG:3857@jpg/{z}/{x}/{-y}.jpg?connectId=fa014fbc-6cbe-4b6f-b0ca-fbfb8d1e5b7d&foo=premium', '© <a href="https://mada.ps">Mada</a>'),
        (('Arcgis'), 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', '© <a href="https://mada.ps">Mada</a>'),
        (('google street'), 'https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {'subdomains': ['mt0', 'mt1', 'mt2', 'mt3']}),
        (('google Hybrid'), 'https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {'subdomains': ['mt0', 'mt1', 'mt2', 'mt3']}),
        (('google sat'), 'https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {'subdomains': ['mt0', 'mt1', 'mt2', 'mt3']}),
        (('google terrain'), 'https://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {'subdomains': ['mt0', 'mt1', 'mt2', 'mt3']}),
        (('Map Quest Imagery'), 'https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png?api_key=c810f252-c3fb-49bc-807e-c6c4568e021e', '© <a href="https://mada.ps">Mada</a>'),

    ],
    'FORCE_IMAGE_PATH': True,
    'PLUGINS': {
        'forms': {
            'auto-include': True
        },
        'geocoder': {
            'css': ['static/leaflet/Control.Geocoder.css'],
            'js': ['static/leaflet/Control.Geocoder.js'],
        }
    }
}    


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
    # from rest_framework.decorators import api_view, permission_classes
    # from rest_framework.permissions import IsAuthenticated
    # from rest_framework.permissions import IsAuthenticated
    # or use @api_view(['GET']), @authentication_classes([SessionAuthentication, BasicAuthentication]) for authentication
    # and @permission_classes([IsAuthenticated]) decorators above view func for permission
}

# CORS_ALLOWED_ORIGINS = [
# 	"http://localhost:8080",
# ]
CORS_ALLOW_ALL_ORIGINS = True # If this is used then `CORS_ALLOWED_ORIGINS` will not have any effect
CORS_ALLOW_CREDENTIALS = True
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'crm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.mysql',
        'ENGINE': 'django.contrib.gis.db.backends.mysql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST':config('DB_HOST'),
        'PORT':config('DB_PORT',cast=int),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# Fake PyMySQL's version and install as MySQLdb
# https://adamj.eu/tech/2020/02/04/how-to-use-pymysql-with-django/
# pymysql.version_info = (1, 4, 2, "final", 0)
# pymysql.install_as_MySQLdb()
